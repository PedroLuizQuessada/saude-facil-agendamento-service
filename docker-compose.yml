services:
#  agendamento_app:
#    build:
#      context: .
#      target: execution
#    container_name: agendamento_app
#    ports:
#      - "8080:8080"
#    networks:
#      - saude_facil_net
#    depends_on:
#      mysql:
#        condition: service_healthy
#      rabbitmq:
#        condition: service_healthy
#    secrets:
#      - spring.datasource.url
#      - spring.datasource.username
#      - spring.datasource.password
#    environment:
#      SPRING_RABBITMQ_HOST: rabbitmq
#      SPRING_RABBITMQ_PORT: 5672
#      SPRING_RABBITMQ_USERNAME: admin
#      SPRING_RABBITMQ_PASSWORD: 123456
#    healthcheck:
#      test: [ "CMD", "curl", "-f", "http://localhost:8080/actuator/health" ]
#      start_period: 20s
#      interval: 30s
#      retries: 500
#      timeout: 50s
#
#  notificacao_app:
#    build:
#      context: https://github.com/PedroLuizQuessada/saude-facil-notificacao-service.git
#      dockerfile: Dockerfile
#    container_name: notificacao_app
#    ports:
#      - "8081:8080"
#    networks:
#      - saude_facil_net
#    depends_on:
#      rabbitmq:
#        condition: service_healthy
#      agendamento_app:
#        condition: service_healthy
#    environment:
#      SPRING_RABBITMQ_HOST: rabbitmq
#      SPRING_RABBITMQ_PORT: 5672
#      SPRING_RABBITMQ_USERNAME: admin
#      SPRING_RABBITMQ_PASSWORD: 123456

  mysql:
    image: "mysql:8.0"
    container_name: saude_facil_db
    build:
      context: .
      dockerfile: Dockerfile-mysql
    ports:
      - "3306:3306"
    networks:
      - saude_facil_net
    environment:
      MYSQL_DATABASE_FILE: /run/secrets/db_name
      MYSQL_USER_FILE: /run/secrets/spring.datasource.username
      MYSQL_PASSWORD_FILE: /run/secrets/spring.datasource.password
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/db_root_password
    volumes:
      - mysql_data:/var/lib/mysql
    secrets:
      - db_name
      - spring.datasource.username
      - spring.datasource.password
      - db_root_password
    healthcheck:
      test: mysqladmin ping -h localhost -u root --password=$$(cat /run/secrets/db_root_password)
      start_period: 20s
      interval: 30s
      retries: 500
      timeout: 50s

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - saude_facil_net
    volumes:
      - rabbit_data:/var/lib/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=123456
    entrypoint: >
      bash -c "
        echo 'Corrigindo permiss√µes do volume...';
        chown -R rabbitmq:rabbitmq /var/lib/rabbitmq &&
        chmod 700 /var/lib/rabbitmq &&
        exec docker-entrypoint.sh rabbitmq-server
      "
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      start_period: 20s
      interval: 30s
      retries: 500
      timeout: 50s

secrets:
  spring.datasource.url:
    file: ./secrets/db_url.txt
  spring.datasource.username:
    file: ./secrets/db_user.txt
  spring.datasource.password:
    file: ./secrets/db_password.txt
  db_name:
    file: ./secrets/db_name.txt
  db_root_password:
    file: ./secrets/db_root_password.txt

networks:
  saude_facil_net:
    driver: bridge

volumes:
  mysql_data: {}
  rabbit_data: {}